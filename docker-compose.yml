version: '3.8'

services:
  # PostgreSQL Database (shared by backend)
  postgres:
    image: postgres:15-alpine
    container_name: vet-connect-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: vet_connect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vet-connect-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Future: Add backend container here when ready for full Docker deployment
  # backend:
  #   build: ./apps/backend
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/veteran_resource_hub

  # Future: Add frontend container here when ready
  # frontend:
  #   build: ./apps/frontend
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local